Formação Android - Android parte I: Crie sua primeira app mobile

Aula 2: parte 1 - iniciar


* Arquivo estático - é um arquivo específico para layout pois contem declarações 
estáticas como numeração de pixel imagens e tamanhos, geralmente os arquivos 
estáticos são mantidos nos resorces na pasta "res".

A pasta res é subdividida em outras três partes:

drawble - representa uma pasta onde ficarão todas as imagens estáticas. 
EX: ícones, imagens que aparecerão em uma view.

mipimap - outra pasta destinada a ícones.

values - trata dos valores por exemplo valor de cores, strings e etc. Também 
possui o arquivo style que pode alterar o tema do app.


O ideal é pega o arquivo e mandar como 
referencia para o setContentView.

Como Criar um arquivo estatico: 
1 - Criar um Diretorio de arquivos estaticos para os resources.
clica com botão direito na pasta res -> New -> Android Resource Directory
2 - Dentro da janela que abrir 
Resource Type -> layout -> OK
3 - Criar um arquivo para representar o Layout
clica com botão direito na pasta layout -> New -> Layout Resource File
4 - Dentro da janela que abrir 
File Name -> preencher EX: activity_main
Root Element -> Lynear Layout -> OK
5 - Criação do Arquivo concluida ( essa visualização é um editor visual capaz
de modificar o layout de maneira estatica.Podendo arrastar e soltar objetos 
do layout para editar sua posição = dragdrop. )


* Toast - componente capaz de mostrar mensagens, ele mostra amensagem e depois desaparece 
Ex de Toast:  Toast.makeText(context: this, "Hello ", Toast.LENGTH_SHORT).show();
1º Argumento : context - é uma classe base para qualquer tipo de entidade do Android, é a partir 
dela que se identifica da onde vem uma ação.

2º Argumento : text - mensagem que irá aparecer.

3º Argumento : tempo de aparição na tela - Toast.LENGTH_SHORT indica que irá 
aparecer por um breve momento. Ou pode ser usado o Toast.LENGTH_LONG que 
demora um pouco mais para desaparecer da tela.
 
* Ciclos de Vida - São os estados mantidos pelas entidades do Android. Ex:
Terá um estado de criação para a Activity, ou então um outro estado poderá
destruir uma activity. 

Assim podemos adicionar comportamentos quando uma activity for criada tendo assim
a capacidade de sobrescrever comportamentos. Podendo escrever um método no qual
vá pegar um estado específico.

* Activity - Adiciona comportamentos, views para o projeto. Ex: um estador pode 

* consegui dar push pelo android mas apaguei os arquivos do projeto
criar um novo projeto e refazer tudo e passar para o git ou desfazer a besteirada =[ :
Não foi necessário criar um novo projeto e refazer tudo, foi feito uma regressão de versão localmente
para a versão onde o projeto fucionava corretamente, depois com essa versão foi feito um branch temporario,
um branch de backup, então no branch master foi feito um pull para sincronizar o repositorio remoto com o 
local, ao sincronizar percebeu-se que o ultimo commit era o defeituoso e o antepenultimo estava correto, 
assim foi gerado um novo commit revertendo a ultima alteração e adicionando a ultima versão correta, 
com esta ação o repositorio local ficou a frente do repositorio remoto tornando possivel fazer o push 
da edição mais recente correta. 

*Android Token :
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 válido por 30 dias.
Através do Token foi possivel o push pelo Android studio mas ele criou um novo branch, ele fez push 
pelo branch Master e eu estava fazendo push manual antes pelo branch Main. 

*Emulador:
Foi necessário baixar e instalar o HAX https://github.com/intel/haxm/releases/tag/v7.7.0 para que 
o emulador funcionasse.

* Manifest
Arquivo com as configurações dos componentes principais do app
Componente Aplication: é o componente principal do app, as activitys 
serão registradas nele.

EX:

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="alura.com.br">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Agenda">
        <activity android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
    </application>
</manifest>

* Activity
é um ponto de entrada para a execução de um app.
Uma Activity possui uma View: mostra uma layout visual para o usuario.
E também possui Lógica: código Java
Para criação de uma Activity é necessário uma classe para representa-la.
Atalho para criar alguma coisa em um pacote: ALT+insert

* Problemas de Memória no gradle
Se houver falha por falta de espaço na JVM você pode ir ate a aba Android 
na parte Gradle no arquivo gradle.propertys e comenta a linha com 
org.gradle.jwarqs-Xmx1536m depois clica em try again 

* Ferramentas 
Android Studio, Android SDK, Linguagen Java

* Requisitos para programar Apps Android?
Conhecimento sólidos em POO (Programação Orientada a Objetos)
Classes, Heranças e interfaces.

* Maiores possibilidades no produto final
Câmera, GPS, Sensores, Conectividade

* onde o Android é usado?
Smartphones e Tablets, Wears, TVs, Notebooks, Carros, IoTs

* o que é o Android?
Sistema operacional, open source, baseado em Linux. 